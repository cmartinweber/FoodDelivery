@page
@model FoodDelivery.Pages.Customer.Cart.SummaryModel
@using Infrastructure.Services
@using Infrastructure.Utilities
@using Microsoft.Extensions.Options
@inject IOptions<Infrastructure.Services.StripeSettings> Stripe

@{
    ViewData["Title"] = "Summary";
}

<form id="payment-form" method="post">
    @if (Model.OrderDetailsCart.ListCart.Count > 0)
    {
        <input asp-for="@Model.OrderDetailsCart.ListCart[0].ApplicationUserId" hidden />
        <div class="backgroundWhiteBorder">
            <div class="container">
                <div class="card">
                    <div class="card-header bg-dark text-light ml-0 row container">
                        <div class="col-6">
                            <i class="fa fa-shopping-cart"></i> &nbsp;
                            Order Summary
                        </div>
                        <div class="col-6 text-end">
                            <a asp-page="Index" class="btn btn-outline-info btn-sm">Back to Cart</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="container rounded p-2">
                            <div class="row">
                                <div class="col-12 col-lg-6 pb-4">
                                    <div class="row">
                                        <h4 class="d-flex justify-content-between align-items-center mb-3">
                                            <span class="text-info">Delivery Details:</span>
                                        </h4>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Name</label>
                                        </div>
                                        <div class="col-9">
                                            <input id="txtName" asp-for="@Model.OrderDetailsCart.OrderHeader.DeliveryName" type="text" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Phone Number</label>
                                        </div>
                                        <div class="col-9">
                                            <input id="txtPhone" asp-for="@Model.OrderDetailsCart.OrderHeader.PhoneNumber" type="text" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Delivery Date</label>
                                        </div>
                                        <div class="col-9">
                                            <input id="datepicker" value="" asp-for="@Model.OrderDetailsCart.OrderHeader.DeliveryDate" type="text" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Delivery Time</label>
                                        </div>
                                        <div class="col-9">
                                            <input id="timepicker" value="" asp-for="@Model.OrderDetailsCart.OrderHeader.DeliveryTime" type="text" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Additional Instructions: </label>
                                        </div>
                                        <div class="col-9">
                                            <textarea asp-for="@Model.OrderDetailsCart.OrderHeader.Comments" style="height:100px;" class="form-control"></textarea>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 col-lg-5 offset-lg-1">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-info">Order Summary:</span>
                                    </h4>
                                    <ul class="list-group mb-3">
                                        @foreach (var details in Model.OrderDetailsCart.ListCart)
                                        {
                                            <li class="list-group-item d-flex justify-content-between">
                                                <div>
                                                    <h6 class="my-0">@details.MenuItem.Name</h6>
                                                    <small class="text-muted">Quantity: @details.Count</small>
                                                </div>
                                                <span class="text-muted">$@((details.MenuItem.Price * details.Count).ToString("0.00"))</span>
                                            </li>
                                        }
                                        <li class="list-group-item d-flex justify-content-between bg-light">
                                            <small class="text-info">Sales Tax (@SD.SalesTaxRate%)</small>
                                            <strong class="text-info">$@((Model.OrderDetailsCart.OrderHeader.OrderTotal * SD.SalesTaxPercent).ToString("0.00"))</strong>
                                        </li>
                                        <li class="list-group-item d-flex justify-content-between bg-light">
                                            <small class="text-info">Total (USD)</small>
                                            <strong class="text-info">$@Model.OrderDetailsCart.OrderHeader.OrderTotal.ToString("0.00")</strong>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="col-12 col-md-4 offset-md-8">
                                <div id="card-element" class="form-control my-3"></div>
                                <div id="card-errors" role="alert" class="text-danger"></div>
                                <button type="submit" class="btn btn-success form-control">Place Order</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</form>

@section Scripts {
    <script>
        $(function () {
            // Initialize date and time pickers
            $("#datepicker").datepicker({ minDate: 1, maxDate: "+1W" });
            $("#timepicker").timepicker({ 'minTime': '11:00 AM', 'maxTime': '9:00 PM', step: '30' });
        });

        // Initialize Stripe
        const stripe = Stripe('@Stripe.Value.PublishableKey'); // Use your publishable key
        const elements = stripe.elements();

        // Create a card element
        const card = elements.create('card');
        card.mount('#card-element');

        // Handle form submission
        document.querySelector('#payment-form').addEventListener('submit', async (event) => {
            event.preventDefault();

            // Confirm the payment with Stripe
            const { paymentMethod, error } = await stripe.createPaymentMethod({
                type: 'card',
                card: card,
                billing_details: {
                    name: document.getElementById('txtName').value,
                    phone: document.getElementById('txtPhone').value,
                },
            });

            if (error) {
                // Display error to the user
                document.getElementById('card-errors').textContent = error.message;
            } else {
                // Send the payment method ID to the server
                const form = document.querySelector('#payment-form');
                const hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', paymentMethod.id);
                form.appendChild(hiddenInput);

                // Submit the form
                form.submit();
            }
        });

        function validateInput() {
            var time = document.getElementById("timepicker").value;
            var dt = document.getElementById("datepicker").value;
            var name = document.getElementById("txtName").value;
            var phone = document.getElementById("txtPhone").value;

            if (dt.toString() == '') {
                swal("Error", "Please select Delivery Date", "error");
                return false;
            }
            if (time.toString() == '') {
                swal("Error", "Please select Delivery Time", "error");
                return false;
            }
            if (name.toString() == '') {
                swal("Error", "Please enter a Name", "error");
                return false;
            }
            if (phone.toString() == '') {
                swal("Error", "Please enter Phone Number", "error");
                return false;
            }
            return true;
        }
    </script>
}
